
应用阶段：
    CPU把需要渲染的数据传递给GPU
几何阶段：
    顶点着色器、曲面细分着色器、几何着色器、裁剪、屏幕映射
光栅化阶段：
    三角形设置、三角形遍历、片元着色器、逐片元操作
->屏幕图像：

模型空间：
世界空间：
观察空间：（右手坐标系）
    -- 上面的空间的变换都是简单的空间位置变换
裁剪空间：
    视锥体决定裁剪空间；
    裁剪空间的目标是为了更方便的对渲染图元进行裁剪。
    使用裁剪矩阵（也被称为投影矩阵）将顶点从观察空间变换到裁剪空间。
    投影矩阵的两个目的：
    1、为真正的投影做准备，并不会进行真正的投影工作，而只是为投影做准备。真正的投影发生在后面的【齐次除法】过程中。经过投影矩阵变换后，顶点的w分量具有特殊的意义。
    2、对x、y、z分量进行缩放。直接使用视锥体的6个裁剪平面进行裁剪回比较麻烦，而经过投影矩阵的缩放后，可以直接使用w分量作为一个范围值，如果x、y、z分量都位于这个范围内，就说明顶点位于裁剪空间内。

屏幕空间：
    屏幕空i教案是一个二维空间，因此必须把顶点从裁剪空间投影到屏幕空间中。来生成对应的2D坐标，这个过程分两个步骤：
    1、进行标准【齐次除法】（也称透视除法），用w分量去除x、y、z分量。这一步得到【归一化的设备坐标】（NDC）。OpenGL中，NDC的x、y、z范围为[-1,1]，DirectX中为[0, 1]。
    2、当把顶点变换到NDC中后，根据NDC中的x、y坐标来映射输出窗口对应的像素坐标（实际就是缩放），对于NDC中的z，会被用于深度缓冲，或者别的一些重要的操作中。